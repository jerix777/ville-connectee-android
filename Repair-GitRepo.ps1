# V√©rifie que le dossier .git existe
if (-not (Test-Path ".git")) {
    Write-Host "‚ùå Ce dossier n'est pas un d√©p√¥t Git." -ForegroundColor Red
    exit 1
}

Write-Host "üîß D√©marrage de la r√©paration du d√©p√¥t Git..." -ForegroundColor Cyan

# 1. Supprimer les fichiers de verrouillage (.lock)
Write-Host "üßπ Suppression des fichiers .lock..." -ForegroundColor Yellow
Get-ChildItem -Path ".git" -Recurse -Filter "*.lock" | ForEach-Object {
    Remove-Item $_.FullName -Force
    Write-Host "Supprim√©: $($_.FullName)"
}

# 2. V√©rifier l'int√©grit√© du d√©p√¥t
Write-Host "üîç V√©rification de l'int√©grit√© du d√©p√¥t..." -ForegroundColor Yellow
git fsck --full

# 3. Nettoyer les r√©f√©rences distantes
Write-Host "üåø Prune des r√©f√©rences distantes..." -ForegroundColor Yellow
git fetch --all --prune
git remote prune origin

# 4. R√©parer les r√©f√©rences locales corrompues
Write-Host "üß© R√©paration des r√©f√©rences locales..." -ForegroundColor Yellow
$refs = git show-ref | ForEach-Object { ($_ -split '\s+')[1] }
foreach ($ref in $refs) {
    if ($ref -like "refs/remotes/*") {
        Write-Host "üîß Suppression de la r√©f√©rence distante corrompue : $ref"
        git update-ref -d $ref
    }
}

# 5. V√©rifier les conflits de noms (namespace collisions)
Write-Host "üìõ V√©rification des conflits de noms..." -ForegroundColor Yellow
$branches = git for-each-ref --format='%(refname)' refs/heads/
foreach ($branch in $branches) {
    if ($branch -match "/") {
        $parent = $branch -replace "/.*", ""
        $parentPath = ".git/refs/heads/$parent"
        if (Test-Path $parentPath) {
            Write-Host "‚ö†Ô∏è Conflit d√©tect√© entre branche '$branch' et fichier '$parent'" -ForegroundColor Red
            $newName = $branch -replace "/", "-"
            $branchName = $branch -replace "refs/heads/", ""
            git branch -m $branchName $newName
            Write-Host "‚úÖ Branche renomm√©e en : $newName" -ForegroundColor Green
        }
    }
}

# 6. Garbage collection
Write-Host "üóëÔ∏è Nettoyage du d√©p√¥t (git gc)..." -ForegroundColor Yellow
git gc --prune=now

Write-Host "‚úÖ R√©paration termin√©e. V√©rifiez le statut avec : git status" -ForegroundColor Green
